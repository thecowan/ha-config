sonos_say:
  alias: Sonos TTS script
  sequence:
  - service: sonos.snapshot
    data_template:
      entity_id: '{{ sonos_entity }}'
  - service: sonos.unjoin
    data_template:
      entity_id: '{{ sonos_entity }}'
  - service: media_player.volume_set
    data_template:
      entity_id: '{{ sonos_entity }}'
      volume_level: '{{ volume }}'
  - service: tts.google_say
    data_template:
      entity_id: '{{ sonos_entity }}'
      message: '{{ message }}'
  - delay: '{{ delay }}'
  - service: sonos.restore
    data_template:
      entity_id: '{{ sonos_entity }}'
sonos_get_home:
  alias: Sonos Get Home
  sequence:
  - service: script.sonos_join_all
  - service: script.sonos_play_matching
    data_template:
      entity_id: media_player.living_room
      match: \U0001F3E0
sonos_romance:
  alias: Sonos Romantic Music
  sequence:
  - service: script.sonos_join_all
  - service: script.sonos_play_matching
    data_template:
      entity_id: media_player.living_room
      match: \U0001F49C
sonos_sleep:
  alias: Sonos Sleep Music
  sequence:
  - service: media_player.media_pause
  - service: sonos.unjoin
    data_template:
      entity_id: media_player.master_bedroom
  - service: media_player.volume_set
    data_template:
      entity_id: media_player.master_bedroom
      volume_level: '0.05'
  - service: media_player.shuffle_set
    data:
      entity_id: media_player.master_bedroom
      shuffle: true
  - service: script.sonos_play_matching
    data_template:
      entity_id: media_player.master_bedroom
      match: \U0001F4A4
sonos_play_non_matching:
  alias: Sonos Play Non-Matching
  sequence:
  - service: media_player.select_source
    data_template:
      entity_id: '{{ entity_id }}'
      source: '{{ state_attr(entity_id, "source_list") | map("regex_replace", ".*"
        + match + ".*", "") | reject("eq", "") | reject("eq", "Line-in") | list |
        random }}'
sonos_play_matching:
  alias: Sonos Play Matching
  sequence:
  - service: media_player.select_source
    data_template:
      entity_id: '{{ entity_id }}'
      source: '{{ state_attr(entity_id, "source_list") | map("regex_replace", "^(?!.*"
        + match + ").*$", "") | reject("eq", "") | reject("eq", "Line-in") | list
        | random }}'
sonos_join_all:
  alias: Sonos Join All
  sequence:
  - service: sonos.join
    data_template:
      master: media_player.living_room
      entity_id:
      - media_player.kitchen
      - media_player.master_bedroom
      - media_player.bathroom
sonos_ungroup_and_play:
  alias: Sonos Ungroup & Play
  sequence:
  - service: sonos.unjoin
    data_template:
      entity_id: '{{ sonos_entity }}'
  - service: media_player.volume_set
    data_template:
      entity_id: '{{ sonos_entity }}'
      volume_level: '{{ volume }}'
  - service: media_player.select_source
    data_template:
      entity_id: '{{ sonos_entity }}'
      source: '{{ source_name }}'
shower_paul:
  alias: 'Shower: Paul'
  sequence:
  - data:
      sonos_entity: media_player.bathroom
      source_name: I'm feeling lucky (Paul) üè†üöø
      volume: 0.5
    service: script.sonos_ungroup_and_play
pause_all_sonos:
  alias: Pause All Sonos
  sequence:
  - service: media_player.media_pause
    data:
      entity_id: group.all_sonos
pause_all_media:
  alias: Pause All Media
  sequence:
  - service: media_player.media_pause
set_cap_flap_state:
  alias: Set Cap Flap State
  fields:
    target_statex:
      description: The aggregate state of the cat flap (all_locked, all_unlocked,
        keep_inside, keep_outside, keep_in_bedroom, keep_in_office)
      example: keep_in_bedroom
  variables:
    target_state: all_unlocked
  sequence:
  - service: system_log.write
    data:
      message: Cat flap to  {% if target_state in ["all_locked"] -%} locked_all {%-
        elif target_state in ["all_unlocked"] -%} unlocked {%- elif target_state in
        ["keep_outside", "keep_in_office"] -%} locked_out {%- elif target_state in
        ["keep_inside", "keep_in_bedroom"] -%} locked_in {%- else -%} ??? {%- endif
        %}
  - service: surepetcarebeta.set_lock_state
    data:
      flap_id: 675555
      lock_state: "{% if target_state in [\"all_locked\"] -%}\n  locked_all\n{%- elif\
        \ target_state in [\"all_unlocked\"] -%}\n  unlocked\n{%- elif target_state\
        \ in [\"keep_outside\", \"keep_in_office\"] -%}\n  locked_out\n{%- elif target_state\
        \ in [\"keep_inside\", \"keep_in_bedroom\"] -%}\n  locked_in\n{%- else -%}\n\
        \  ???\n{%- endif %}"
  - service: surepetcarebeta.set_lock_state
    data:
      flap_id: 671120
      lock_state: "{% if target_state in [\"all_locked\"] -%}\n  locked_all\n{%- elif\
        \ target_state in [\"all_unlocked\"] -%}\n  unlocked\n{%- elif target_state\
        \ in [\"keep_outside\", \"keep_in_bedroom\"] -%}\n  locked_out\n{%- elif target_state\
        \ in [\"keep_inside\", \"keep_in_office\"] -%}\n  locked_in\n{%- else -%}\n\
        \  ???\n{%- endif %}"
  mode: single
  icon: mdi:cat
  description: Bulk set cat flap state
