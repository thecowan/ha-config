- id: '1527922079178'
  alias: "\U0001F518 Paul Bathroom Button"
  description: ''
  trigger:
  - event_data:
      click_type: single
      entity_id: binary_sensor.wall_switch_left_bathroom
    event_type: xiaomi_aqara.click
    platform: event
  condition: []
  action:
  - service: script.shower_paul
    data: {}
- id: '1527925880014'
  alias: "\U0001F518 Play/Pause Ensuite"
  description: ''
  trigger:
  - event_data:
      click_type: both
      entity_id: binary_sensor.wall_switch_both_bathroom
    event_type: xiaomi_aqara.click
    platform: event
  condition: []
  action:
  - data:
      entity_id: media_player.bathroom
    service: media_player.media_play_pause
- id: '1528768127918'
  alias: "\U0001F50A Sonos: Switch Loungeroom amp when active"
  description: ''
  trigger:
  - entity_id: media_player.lounge
    from: paused
    platform: state
    to: playing
  condition: []
  action:
  - data:
      entity_id: automation.receiver_update_last_state
    service: automation.turn_off
  - data:
      entity_id: media_player.receiver
    service: media_player.turn_on
  - timeout: 00:00:10
    wait_template: '{{ is_state(''media_player.receiver'', ''on'') }}'
  - data:
      entity_id: media_player.receiver
      source: Video2
    service: media_player.select_source
  - data:
      entity_id: media_player.receiver
      volume_level: 0.825
    service: media_player.volume_set
- id: '1528777053684'
  alias: "\U0001F50A Receiver: update last state"
  description: ''
  trigger:
  - entity_id: media_player.receiver
    platform: state
  condition:
  - condition: template
    value_template: '{{ trigger.to_state.attributes.source not in ["Sonos", "video2_cbl_sat"]  }}'
  action:
  - data:
      value_template: '{{ states("media_player.receiver") }}'
      entity_id: var.receiver_last_state
    service: var.set
  - data:
      value_template: '{% if is_state("media_player.receiver", "on") -%}{{ state_attr("media_player.receiver",
        "source") | regex_replace("_.*", "") | regex_replace("^video", "Video") }}{%-
        else -%}{{ states("variable.receiver_last_source") }}{%- endif %}'
      entity_id: var.receiver_last_source
    service: var.set
  - data:
      value_template: '{% if is_state("media_player.receiver", "on") -%}{{ state_attr("media_player.receiver",
        "volume_level") }}{%- else -%}{{ states("variable.receiver_last_volume") }}{%-
        endif %}'
      entity_id: receiver_last_volume
    service: var.set
- id: '1528780901218'
  alias: "\U0001F50A Sonos: Switch loungeroom back after finished"
  description: ''
  trigger:
  - entity_id: media_player.lounge
    from: playing
    platform: state
    to: paused
  condition: []
  action:
  - data_template:
      entity_id: media_player.receiver
      volume_level: '{{ states("var.receiver_last_volume") }}'
    service: media_player.volume_set
  - data_template:
      entity_id: media_player.receiver
      source: '{{ states("var.receiver_last_source") }}'
    service: media_player.select_source
  - data_template:
      entity_id: '{% if is_state("var.receiver_last_state", "off") -%}media_player.receiver{%-
        else -%}dummy.dummy{%- endif -%}'
    service: media_player.turn_off
  - delay:
      seconds: 20
  - data:
      entity_id: automation.receiver_update_last_state
    service: automation.turn_on
- id: '1546980843431'
  alias: "\U0001F3E0 Paul Arrive Home (Alone)"
  description: ''
  trigger:
  - entity_id:
    - person.paul
    from: not_home
    platform: state
    to: home
  - platform: state
    entity_id:
    - person.paul
    from: War Memorial Park
    to: home
  - platform: state
    entity_id:
    - person.paul
    from: Pioneers Memorial Park
    to: home
  - platform: state
    entity_id:
    - person.paul
    from: 36th Batallion Park
    to: Home
  condition:
  - condition: state
    entity_id: binary_sensor.just_paul
    state: 'on'
  action:
  - service: light.turn_on
    data: {}
    target:
      entity_id: light.living_room_lamp
  - service: script.paul_arrive_home
    data: {}
- id: '1546984412841'
  alias: "\U0001F3E0 Paul Leave Home"
  description: ''
  trigger:
  - entity_id: device_tracker.pauls_pixel_6_pro
    platform: state
    from: home
    to: not_home
    for:
      minutes: 10
  condition: []
  action:
  - service: media_player.media_pause
    data: {}
  - service: light.turn_off
    data: {}
- id: '1621316877856'
  alias: "\U0001F6E0️ Tasmota Discovery: Aroma Diffuser 1"
  description: ''
  use_blueprint:
    path: tasmota/discovery-tuya_diffuser_fan_and_error_sensor.yaml
    input:
      name: diffuser1
      topic: tasmota_1229CD
      mac_address: 4C:11:AE:12:29:CD
- id: '1621318073028'
  alias: "\U0001F6E0️ Tasmota Discovery: Aroma Diffuser 2"
  description: ''
  use_blueprint:
    path: tasmota/discovery-tuya_diffuser_fan_and_error_sensor.yaml
    input:
      name: diffuser2
      topic: tasmota_1222E9
      mac_address: 4C:11:AE:12:22:E9
- id: '1622631147055'
  alias: "\U0001F552 Pause Overnight Music"
  description: ''
  trigger:
  - platform: time
    at: 05:00:00
  condition: []
  action:
  - service: media_player.media_pause
    target:
      entity_id:
      - media_player.master_bedroom
      - media_player.guest_room
    data: {}
  mode: single
- id: '1622693720246'
  alias: "\U0001F6CE️  Doorbell Reaction"
  description: ''
  trigger:
  - platform: event
    event_type: xiaomi_aqara.click
    event_data:
      click_type: single
      entity_id: binary_sensor.front_doorbell_button
  condition: []
  action:
  - service: yeelight.set_color_flow_scene
    data:
      count: 2
      action: recover
      transitions:
      - HSVTransition:
        - 180
        - 100
        - 100
        - 80
      - HSVTransition:
        - 180
        - 100
        - 250
        - 1
    target:
      entity_id:
      - light.yeelight_office
  mode: single
- id: '1624282422729'
  alias: "\U0001F4AC Telegram test"
  description: ''
  trigger:
  - platform: event
    event_type: telegram_command
    event_data:
      command: /hi
  condition: []
  action:
  - service: telegram_bot.send_message
    data:
      message: Hi yourself, {{ trigger.event.data["from_first"] }}!
      target: '{{ trigger.event.data.chat_id }}'
  mode: single
- id: '1624101614357'
  alias: "\U0001F518 Toggle Outside Lights"
  description: ''
  trigger:
  - device_id: ab450a7b3d8039f7716d894b38bf16e6
    domain: zha
    platform: device
    type: remote_button_short_press
    subtype: remote_button_short_press
  condition: []
  action:
  - service: light.toggle
    target:
      entity_id: light.outside_globes
    data: {}
  mode: single
- id: '1624283044736'
  alias: "\U0001F4AC Telegram Home"
  description: ''
  trigger:
  - platform: event
    event_type: telegram_command
    event_data:
      command: /digest
  condition: []
  action:
  - service: telegram_bot.send_message
    data:
      message: "\U0001F321️ Living Room Temp = {{ states(\"sensor.living_room_temperature\")
        }}°C \n\U0001F321 Outside Temp = {{ states(\"sensor.outside_temperature\")
        }}°C\n\U0001F324 Weather = {{ states(\"sensor.lilyfield_short_text_0\") }}
        (tomorrow {{ states(\"sensor.lilyfield_short_text_1\") }})\n\U0001F327️ Chance
        of rain = {{ states(\"sensor.lilyfield_rain_chance_0\") }}% (tomorrow {{ states(\"sensor.lilyfield_rain_chance_1\")
        }}%)"
      target: '{{ trigger.event.data.chat_id }}'
  mode: single
- id: '1624503867808'
  alias: "\U0001F518 Toggle Party Lights"
  description: ''
  trigger:
  - device_id: ab450a7b3d8039f7716d894b38bf16e6
    domain: zha
    platform: device
    type: remote_button_double_press
    subtype: remote_button_double_press
  condition: []
  action:
  - service: light.toggle
    target:
      entity_id: light.flux_party
    data:
      effect: colorloop
  mode: single
- id: '1629257243979'
  alias: ⚡ Dishwasher Finished
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_select.dishwasher_state_machine
    to: job_completed
  condition: []
  action:
  - service: script.activate_z2m_siren
    data:
      siren_entity: switch.laundry_siren_alarm
      volume_entity: select.laundry_siren_volume
      melody_entity: select.laundry_siren_melody
      duration_entity: number.laundry_siren_duration
      volume: low
      melody_id: 5
      duration: 8
  mode: single
- id: '1633580036748'
  alias: "\U0001FA9F  Blinds: Close at Sunset or designated time"
  description: ''
  trigger:
  - platform: time_pattern
    minutes: /1
  - platform: state
    entity_id:
    - input_datetime.blind_close_time
    - input_number.blind_close_sunset_offset
    - input_number.blind_close_temperature
  condition:
  - condition: state
    entity_id: cover.living_room_blind
    state: open
  - condition: or
    conditions:
    - condition: and
      conditions:
      - condition: time
        after: input_datetime.blind_close_time
        before: 00:00:00
      - condition: state
        entity_id: sensor.living_room_window_light_summary
        state: direct_sun
      - condition: numeric_state
        entity_id: sensor.outside_temperature
        above: input_number.blind_close_temperature
    - condition: and
      conditions:
      - condition: time
        before: 00:00:00
        after: '12:00:00'
      - condition: numeric_state
        entity_id: sun.sun
        attribute: elevation
        below: input_number.blind_close_sunset_offset
  action:
  - service: cover.close_cover
    data: {}
    target:
      entity_id: cover.living_room_blind
  mode: single
- id: '1633601876342'
  alias: "\U0001FA9F  Blinds: Open in the Morning"
  description: ''
  trigger:
  - platform: time
    at: input_datetime.blind_open_time
  condition: []
  action:
  - service: cover.open_cover
    data: {}
    target:
      entity_id: cover.living_room_blind
  mode: single
- id: '1634176799507'
  alias: "\U0001F3A5 Turn Selfie Light on when meeting starts"
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.cow_macbookpro_in_meeting
    to: 'on'
  condition: []
  action:
  - service: light.turn_on
    data:
      color_temp: 100
      brightness_pct: 100
    target:
      entity_id: light.office_ring_light
  mode: single
- id: '1634179680814'
  alias: "\U0001F3A5 Turn Selfie Light off when meeting ends"
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.cow_macbookpro_in_meeting
    to: 'off'
  condition: []
  action:
  - service: light.turn_off
    target:
      entity_id: light.office_ring_light
    data: {}
  mode: single
- id: '1638313007824'
  alias: "\U0001F518 Office Magic Cube"
  description: ''
  use_blueprint:
    path: Mikkelmoeller/aqara-magic-cube-zha-51-actions.yaml
    input:
      remote: 32aee9b615dfbf3b485c18093910afed
      rotate_right:
      - service: media_player.volume_up
        target:
          entity_id: media_player.office
        data: {}
      rotate_left:
      - service: media_player.volume_down
        target:
          entity_id: media_player.office
        data: {}
      knock_any_side: true
      cube_knock_any:
      - service: media_player.media_play_pause
        target:
          entity_id: media_player.office
        data: {}
      cube_flip_180:
      - service: media_player.media_previous_track
        target:
          entity_id: media_player.office
        data: {}
      flip_180: true
      flip_90: true
      cube_flip_90:
      - service: media_player.media_next_track
        target:
          entity_id: media_player.office
        data: {}
      cube_shake:
      - service: sonosrandomiser.random_tagged_media
        data:
          entity_id: media_player.office
          filter: \U0001F42E
          status_entity_id: status
- id: '1639972602920'
  alias: "\U0001F3A5 Office meeting begin/change"
  description: ''
  trigger:
  - platform: state
    entity_id: sensor.busy_light_colour
    to:
    - blue
    - red
    - green
  condition:
  - condition: state
    entity_id: binary_sensor.cow_macbookpro_docked_in_office
    state: 'on'
  action:
  - service: light.turn_on
    target:
      entity_id: light.office_busy_light
    data:
      color_name: '{{ trigger.to_state.state }}'
  mode: single
- id: '1639974205992'
  alias: "\U0001F3A5 Office meeting end"
  description: ''
  trigger:
  - platform: state
    entity_id:
    - sensor.busy_light_colour
    to: free
    for:
      hours: 0
      minutes: 0
      seconds: 10
  condition:
  - condition: state
    entity_id: binary_sensor.cow_macbookpro_docked_in_office
    state: 'on'
  action:
  - if:
    - condition: state
      entity_id: input_text.resume_office_music_when_meeting_ends
      state: 'True'
    then:
    - service: media_player.media_play
      data: {}
      target:
        entity_id: media_player.office
    else:
    - service: notify.mobile_app_pixel_6_pro
      data:
        message: Resume/play office music?
        title: Meeting ended?
        data:
          actions:
          - action: RESUME_OFFICE
            title: Resume
          - action: IGNORE
            title: Ignore
  - service: light.turn_off
    target:
      entity_id: light.office_busy_light
    data: {}
  - service: switch.turn_off
    data: {}
    target:
      entity_id: switch.apple_iigs_monitor
  mode: single
- id: '1640079011445'
  alias: "\U0001F4A1 Populate Light Effects"
  description: ''
  trigger:
  - platform: state
    entity_id:
    - light.hedge
    - light.porch
    - light.porch_inside
    - light.front_window
    attribute: effect_list
  - platform: state
    entity_id:
    - light.hedge
    - light.porch
    - light.porch_inside
    - light.front_window
    attribute: effect
  condition: []
  action:
  - service: input_select.set_options
    target:
      entity_id: '{% if trigger.entity_id == "light.hedge" %}input_select.hedge_effect{%
        elif trigger.entity_id == "light.porch" %}input_select.porch_effect% elif
        trigger.entity_id == "light.porch_inside" %}input_select.porch_inside_effect{%
        elif trigger.entity_id == "light.front_window" %}input_select.front_window_effect{%
        endif %}'
    data:
      options: '{{ state_attr(trigger.entity_id, "effect_list") }}'
  - service: input_select.select_option
    target:
      entity_id: '{% if trigger.entity_id == "light.hedge" %}input_select.hedge_effect{%
        elif trigger.entity_id == "light.porch" %}input_select.porch_effect{% elif
        trigger.entity_id == "light.porch_inside" %}input_select.porch_inside_effect{%
        elif trigger.entity_id == "light.front_window" %}input_select.front_window_effect{%
        endif %}'
    data:
      option: '{{ state_attr(trigger.entity_id, "effect") }}'
  mode: single
- id: '1640079960037'
  alias: "\U0001F4A1 Publish Light Effects"
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_select.hedge_effect
    - input_select.porch_effect
    - input_select.porch_inside_effect
    - input_select.front_window_effect
  condition: []
  action:
  - service: light.turn_on
    target:
      entity_id: '{% if trigger.entity_id == "input_select.hedge_effect" %}light.hedge{%
        elif trigger.entity_id == "input_select.porch_effect" %}light.porch{% elif
        trigger.entity_id == "input_select.porch_inside_effect" %}light.porch_inside{%
        elif trigger.entity_id == "input_select.front_window_effect" %}light.front_window{%
        endif %}'
    data:
      effect: '{{ trigger.to_state.state }}'
  mode: single
- id: '1640131452644'
  alias: "\U0001F384 Christmas Lights Turn On"
  description: ''
  trigger:
  - platform: sun
    event: sunset
    offset: '0'
  condition: []
  action:
  - service: light.turn_on
    target:
      entity_id:
      - light.porch
      - light.front_window
      - light.hedge
    data: {}
  - type: turn_on
    device_id: b7dd81ddd22fb9e355cdc312d2b57671
    entity_id: switch.porch_sync_send
    domain: switch
  - type: turn_on
    device_id: 988468d81e8fc1a0c9af30b2264c608a
    entity_id: switch.front_window_sync_receive
    domain: switch
  - delay:
      hours: 0
      minutes: 0
      seconds: 5
      milliseconds: 0
  - device_id: fba657a300c488982877bea85936a7c4
    domain: select
    entity_id: select.hedge_playlist
    type: select_option
    option: Christmas Playlist
  - device_id: b7dd81ddd22fb9e355cdc312d2b57671
    domain: select
    entity_id: select.porch_playlist
    type: select_option
    option: Christmas Mix
  mode: single
- id: '1643507370583'
  alias: "\U0001F4A1 Turn off Ring Light Colour when Ring Light White on"
  description: ''
  trigger:
  - platform: state
    entity_id: light.office_ring_light_white
    to: 'on'
  condition: []
  action:
  - service: light.turn_off
    target:
      entity_id: light.office_ring_light_colour
    data: {}
  mode: single
- id: '1643507502308'
  alias: "\U0001F4A1 Turn off Ring Light White when Ring Light Colour on"
  description: ''
  trigger:
  - platform: state
    entity_id: light.office_ring_light_colour
    to: 'on'
  condition: []
  action:
  - service: light.turn_off
    target:
      entity_id:
      - light.office_ring_light_white
    data: {}
  mode: single
- id: '1643532214796'
  alias: "\U0001F4A1 Update last ring light state"
  description: ''
  trigger:
  - platform: state
    entity_id: light.office_ring_light_colour
    to: 'on'
  - platform: state
    entity_id: light.office_ring_light_white
    to: 'on'
  condition: []
  action:
  - service: input_text.set_value
    target:
      entity_id: input_text.office_ring_light_last_mode
    data:
      value: '{{ trigger.entity_id }}'
  mode: single
- id: '1652232659373'
  alias: "\U0001F4F2 Office Light Switch - Companion App"
  description: ''
  trigger:
  - platform: event
    event_type: ios.action_fired
    event_data:
      actionID: F5BB456E-1E51-4E91-A906-B94363DEB4F8
  condition: []
  action:
  - service: light.toggle
    data: {}
    target:
      entity_id: light.yeelight_office
  mode: single
- id: '1652661275277'
  alias: "\U0001F3A5 Office meeting begin"
  description: ''
  trigger:
  - platform: state
    entity_id: sensor.busy_light_colour
    from: free
  condition:
  - condition: state
    entity_id: binary_sensor.cow_macbookpro_docked_in_office
    state: 'on'
  action:
  - service: input_text.set_value
    data:
      value: '{{ is_state("media_player.office", "playing") and ((state_attr("media_player.office",
        "group_members") | default(''X'', true) | length) == 1) }}'
    target:
      entity_id: input_text.resume_office_music_when_meeting_ends
  - service: media_player.media_pause
    data: {}
    target:
      device_id: 4e62a9a2822e4b42b15dceb3fa53ed28
  - service: switch.turn_on
    data: {}
    target:
      entity_id: switch.apple_iigs_monitor
  mode: single
- id: '1652675530780'
  alias: "\U0001F4F2 Play/Pause Office - Companion App"
  description: ''
  trigger:
  - platform: event
    event_type: ios.action_fired
    event_data:
      actionID: 755F5E0B-63A8-49BA-874F-92D5D43EF2A7
  condition: []
  action:
  - service: media_player.media_play_pause
    data: {}
    target:
      entity_id: media_player.office
  mode: single
- id: '1653435612829'
  alias: "\U0001F4F2 Respond to Office Resume Notification"
  description: ''
  trigger:
  - platform: event
    event_type: mobile_app_notification_action
    event_data:
      action: RESUME_OFFICE
  condition: []
  action:
  - service: media_player.media_play
    data: {}
    target:
      entity_id: media_player.office
  mode: single
- id: '1653519007739'
  alias: "\U0001F3B5 Scrobble Office Tracks"
  description: ''
  trigger:
  - platform: event
    event_type: state_changed
    event_data:
      entity_id: media_player.office
  condition:
  - condition: template
    value_template: '{{ trigger.event.data[''new_state''][''state''] == ''playing''
      or trigger.event.data[''old_state''][''state''] == ''playing'' }}'
  - condition: template
    value_template: "{{ ((state_attr(\"media_player.office\", \"group_members\") |
      default('X', true) |\n    length) == 1) }}"
  - condition: state
    entity_id: binary_sensor.cow_macbookpro_docked_in_office
    state: 'on'
  action:
  - service: shell_command.process_mpd_data
    data:
      mpd_data: "'{{\n  {\n  \"old_state\": {\"media_content_type\": trigger.event.data['old_state']['attributes']['media_content_type']
        | default(\"\"),\n                \"media_content_id\": trigger.event.data['old_state']['attributes']['media_content_id']
        | default(\"\"),\n                \"media_position_updated_at\": as_timestamp(trigger.event.data['old_state']['attributes']['media_position_updated_at'])
        | timestamp_custom('%Y-%m-%dT%H:%M:%S.%f%z',False) | default(\"\"),\n                \"media_title\":
        trigger.event.data['old_state']['attributes']['media_title'] | default(\"\")
        | replace(\"'\",\"\"),\n                \"media_artist\": trigger.event.data['old_state']['attributes']['media_artist']
        | default(\"\") | replace(\"'\",\"\"),\n                \"media_duration\":
        trigger.event.data['old_state']['attributes']['media_duration'] | default(\"\"),\n
        \               \"media_position\": trigger.event.data['old_state']['attributes']['media_position']
        | default(\"\"),\n                \"media_track\": trigger.event.data['old_state']['attributes']['media_track']
        | default(\"\"),\n                \"media_album_name\": trigger.event.data['old_state']['attributes']['media_album_name']
        | default(\"\"),\n                \"media_album_artist\": trigger.event.data['old_state']['attributes']['media_album_artist']
        | default(\"\"),\n                \"source\": trigger.event.data['old_state']['attributes']['source']
        | default(\"\"),\n                \"friendly_name\": trigger.event.data['old_state']['attributes']['friendly_name']
        | default(\"\"),\n                \"entity_picture\": trigger.event.data['old_state']['attributes']['entity_picture']
        | default(\"\"),\n                \"queue_position\": trigger.event.data['old_state']['attributes']['queue_position']
        | default(\"\"),\n                \"queue_size\": trigger.event.data['old_state']['attributes']['queue_size']
        | default(\"\"),\n                \"media_channel\": trigger.event.data['old_state']['attributes']['media_channel']
        | default(\"\") | replace(\"'\",\"\"),\n                \"source_list\": trigger.event.data['old_state']['attributes']['source_list']
        | default(\"\")\n               },\n  \"new_state\": {\"media_content_type\":
        trigger.event.data['new_state']['attributes']['media_content_type'] | default(\"\"),\n
        \               \"media_content_id\": trigger.event.data['new_state']['attributes']['media_content_id']
        | default(\"\"),\n                \"media_position_updated_at\": as_timestamp(trigger.event.data['new_state']['attributes']['media_position_updated_at'])
        | timestamp_custom('%Y-%m-%dT%H:%M:%S.%f%z',False) | default(\"\"),\n                \"media_title\":
        trigger.event.data['new_state']['attributes']['media_title'] | default(\"\")
        | replace(\"'\",\"\"),\n                \"media_artist\": trigger.event.data['new_state']['attributes']['media_artist']
        | default(\"\") | replace(\"'\",\"\"),\n                \"media_duration\":
        trigger.event.data['new_state']['attributes']['media_duration'] | default(\"\"),\n
        \               \"media_position\": trigger.event.data['new_state']['attributes']['media_position']
        | default(\"\"),\n                \"media_track\": trigger.event.data['new_state']['attributes']['media_track']
        | default(\"\"),\n                \"media_album_name\": trigger.event.data['new_state']['attributes']['media_album_name']
        | default(\"\"),\n                \"media_album_artist\": trigger.event.data['new_state']['attributes']['media_album_artist']
        | default(\"\"),\n                \"source\": trigger.event.data['new_state']['attributes']['source']
        | default(\"\"),\n                \"friendly_name\": trigger.event.data['new_state']['attributes']['friendly_name']
        | default(\"\"),\n                \"entity_picture\": trigger.event.data['new_state']['attributes']['entity_picture']
        | default(\"\"),\n                \"queue_position\": trigger.event.data['new_state']['attributes']['queue_position']
        | default(\"\"),\n                \"queue_size\": trigger.event.data['new_state']['attributes']['queue_size']
        | default(\"\"),\n                \"media_channel\": trigger.event.data['new_state']['attributes']['media_channel']
        | default(\"\") | replace(\"'\",\"\"),\n                \"source_list\": trigger.event.data['new_state']['attributes']['source_list']
        | default(\"\")\n               },\n   \"time_new\": as_timestamp(trigger.event.data['new_state']['last_updated'])
        | timestamp_custom('%Y-%m-%dT%H:%M:%S.%f%z',False),\n   \"time_old\": as_timestamp(trigger.event.data['old_state']['last_updated'])
        | timestamp_custom('%Y-%m-%dT%H:%M:%S.%f%z',False),\n   \"state_new\": trigger.event.data['new_state']['state'],\n
        \  \"state_old\": trigger.event.data['old_state']['state']\n   } | to_json\n}}'\n"
  mode: single
- id: '1654515497943'
  alias: "\U0001F4E2 Alert during High Alert Mode"
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.guest_room_door
    - binary_sensor.studio_door
    - binary_sensor.bedroom_door
    to: 'on'
  condition:
  - condition: state
    entity_id: input_boolean.high_alert_mode
    state: 'on'
  action:
  - service: notify.mobile_app_cow_s_macbook_pro
    data:
      message: Alert {{ trigger.entity_id }}
      title: Alert!
  - service: notify.mobile_app_pixel_6_pro
    data:
      message: Alert {{ trigger.entity_id }}
      title: Alert!
  - service: notify.kodi_cow_macbookpro
    data:
      message: Alert {{ trigger.entity_id }}
      title: Alert!
  - service: media_player.media_stop
    data: {}
    target:
      entity_id: media_player.kodi_cows_macbook_pro
  - service: kodi.call_method
    data:
      method: Input.Home
    target:
      entity_id: media_player.kodi_cows_macbook_pro
  mode: single
- id: '1654517529638'
  alias: "\U0001F4E2 Enter High Alert Mode"
  description: ''
  trigger:
  - platform: state
    entity_id:
    - media_player.kodi_cows_macbook_pro
    to: playing
  condition:
  - condition: state
    entity_id: input_boolean.high_alert_mode
    state: 'off'
  action:
  - service: input_boolean.turn_on
    data: {}
    target:
      entity_id: input_boolean.high_alert_mode
  - service: notify.kodi_cow_macbookpro
    data:
      message: Entering High Alert Mode
      title: High Alert
  mode: single
- id: '1654517690774'
  alias: "\U0001F4E2 Exit High Alert Mode"
  description: ''
  trigger:
  - platform: state
    entity_id:
    - media_player.kodi_cows_macbook_pro
    from: playing
    for:
      hours: 0
      minutes: 0
      seconds: 30
  - platform: state
    entity_id:
    - media_player.kodi_cows_macbook_pro
    to: unavailable
  - platform: state
    entity_id:
    - media_player.kodi_cows_macbook_pro
    to: 'off'
  condition:
  - condition: state
    entity_id: input_boolean.high_alert_mode
    state: 'on'
  action:
  - service: input_boolean.turn_off
    data: {}
    target:
      entity_id: input_boolean.high_alert_mode
  - service: notify.kodi_cow_macbookpro
    data:
      message: Leaving High Alert Mode
      title: High Alert
  mode: single
- id: '1654521196420'
  alias: "\U0001F518 Button Test: MQTT Lumi Button 3"
  description: ''
  use_blueprint:
    path: Drafted/aqara-buttons-all-in-one-zigbee2mqtt.yaml
    input:
      action_sensor: sensor.lumi_switch_3_action
      single_action:
      - service: light.toggle
        data:
          color_temp: 309
        target:
          entity_id: light.rear_floodlight
      double_action:
      - service: input_select.select_next
        data: {}
        target:
          entity_id: input_select.read_floodlight_colour_cycle
      - if:
        - condition: state
          entity_id: input_select.read_floodlight_colour_cycle
          state:
          - warm
          - neutral
          - cool
        then:
        - service: light.turn_on
          data:
            color_temp: 300
          target:
            entity_id: light.rear_floodlight
        else:
        - service: light.turn_on
          data:
            color_name: '{{ states("input_select.read_floodlight_colour_cycle") }}'
          target:
            entity_id: light.rear_floodlight
      triple_action:
      - service: notify.mobile_app_cow_s_macbook_pro
        data:
          message: 'Click: triple'
      quadruple_action:
      - service: notify.mobile_app_cow_s_macbook_pro
        data:
          message: 'Click: quadruple!'
      hold_action:
      - service: notify.mobile_app_cow_s_macbook_pro
        data:
          message: Hold
      shake_action: []
- id: '1654644534445'
  alias: "\U0001F552 Start workday in office"
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.cow_macbook_pro_active
    to: 'on'
  condition:
  - condition: template
    value_template: '{{ as_timestamp(state_attr(''automation.start_workday_in_office'',''last_triggered''))|timestamp_custom(''%Y.%j'')
      != as_timestamp(now())|timestamp_custom(''%Y.%j'') }}'
  action:
  - if:
    - condition: not
      conditions:
      - condition: state
        entity_id: media_player.office
        state: playing
    then:
    - service: notify.mobile_app_pixel_6_pro
      data:
        message: Resume/play office music?
        title: Workday beginning!
        data:
          actions:
          - action: RESUME_OFFICE
            title: Resume
          - action: SHUFFLE_OFFICE
            title: Shuffle
          - action: IGNORE
            title: Ignore
  mode: single
- id: '1654648261134'
  alias: "\U0001F4F2 Respond to Office Shuffle Notification"
  description: ''
  trigger:
  - platform: event
    event_type: mobile_app_notification_action
    event_data:
      action: SHUFFLE_OFFICE
  condition: []
  action:
  - service: media_player.unjoin
    data: {}
    target:
      entity_id: media_player.office
  - service: sonosrandomiser.random_tagged_media
    data:
      entity_id: media_player.office
      filter: "\U0001F3E0"
      status_entity_id: status
  mode: single
- id: '1654755382943'
  alias: "\U0001F3E0 Leave Home without Dogs"
  description: ''
  trigger:
  - platform: mqtt
    topic: /foo/bar
  condition: []
  action:
  - service: media_player.play_media
    target:
      entity_id: media_player.office
    data:
      media_content_id: media-source://radio_browser/961a0451-0601-11e8-ae97-52543be04c81
      media_content_type: audio/aac
    metadata:
      title: ABC Local Radio 702 Sydney (AAC)
      thumbnail: http://www.abc.net.au/cm/rimage/7893524-1x1-large.png?v=6
      media_class: music
      children_media_class:
      navigateIds:
      - {}
      - media_content_type: app
        media_content_id: media-source://radio_browser
      - media_content_type: music
        media_content_id: media-source://radio_browser/country/AU
  mode: single
- id: '1654777172274'
  alias: "\U0001F518 Office Opple 6-button [new]"
  description: ''
  use_blueprint:
    path: cow/zigbee2mqtt-z2m-aqara-opple-6-button-remote-3-bands-wxcjkg13lm.yaml
    input:
      switch: sensor.office_opple_6_button_action
      button_1_single:
      - service: light.toggle
        target:
          entity_id: light.yeelight_office
        data: {}
      button_1_triple:
      - service: fan.toggle
        target:
          entity_id: fan.office_diffuser
        data: {}
      button_3_single:
      - service: media_player.volume_down
        target:
          entity_id: media_player.office
        data: {}
      button_3_double:
      - service: media_player.media_previous_track
        target:
          entity_id: media_player.office
        data: {}
      button_3_hold:
      - service: media_player.media_play_pause
        target:
          entity_id: media_player.office
        data: {}
      button_4_single:
      - service: media_player.volume_up
        target:
          entity_id: media_player.office
        data: {}
      button_4_double:
      - service: media_player.media_next_track
        target:
          entity_id: media_player.office
        data: {}
      button_4_hold:
      - service: media_player.unjoin
        target:
          entity_id: media_player.office
        data: {}
      - service: media_player.clear_playlist
        target:
          entity_id: media_player.office
        data: {}
      - service: media_player.shuffle_set
        data:
          shuffle: true
        target:
          entity_id: media_player.office
      - service: sonosrandomiser.random_tagged_media
        data:
          entity_id: media_player.office
          filter: \U0001F42E
          status_entity_id: status
      button_5_single:
      - type: brightness_decrease
        device_id: 8a466522fced3aa1009b180e4be85ada
        entity_id: light.yeelight_office
        domain: light
      button_5_double:
      - service: light.turn_on
        target:
          entity_id: light.yeelight_office
        data:
          color_temp: '{{ max(state_attr("light.yeelight_office", "color_temp")|int
            - 20, state_attr("light.yeelight_office", "min_mireds")|int) }}'
      button_5_hold:
      - service: light.turn_off
        target:
          entity_id: light.yeelight_office
        data: {}
      button_6_single:
      - type: brightness_increase
        device_id: 8a466522fced3aa1009b180e4be85ada
        entity_id: light.yeelight_office
        domain: light
      button_6_double:
      - service: light.turn_on
        target:
          entity_id: light.yeelight_office
        data:
          color_temp: '{{ min(state_attr("light.yeelight_office", "color_temp")|int
            + 20, state_attr("light.yeelight_office", "max_mireds")|int) }}'
      button_6_hold:
      - service: light.turn_on
        data:
          brightness_pct: 100
          color_temp: 299
        target:
          entity_id: light.yeelight_office
- id: '1654780302456'
  alias: "\U0001F518 Office Magic Cube"
  description: ''
  use_blueprint:
    path: SirGoodenough/Zigbee2MQTT - Xiaomi Cube Controller.yaml
    input:
      rotate_cw_face_0:
      - service: media_player.volume_up
        data: {}
        target:
          entity_id: media_player.office
      remote: sensor.office_aqara_cube_action
      rotate_ccw_face_0:
      - service: media_player.volume_down
        data: {}
        target:
          entity_id: media_player.office
      rotate_cw_face_4:
      - device_id: 8a466522fced3aa1009b180e4be85ada
        domain: light
        entity_id: light.yeelight_office
        type: brightness_increase
      rotate_ccw_face_4:
      - device_id: 8a466522fced3aa1009b180e4be85ada
        domain: light
        entity_id: light.yeelight_office
        type: brightness_decrease
- id: '1654913530731'
  alias: "\U0001F518 Bedside Button Left [New]"
  description: ''
  use_blueprint:
    path: cow/aqara-buttons-all-in-one-zigbee2mqtt.yaml
    input:
      action_sensor: sensor.bedroom_button_left_action
      single_action:
      - service: light.toggle
        data: {}
        target:
          entity_id:
          - light.bedside_lamps
      double_action:
      - service: script.paul_sleep
        data: {}
- id: '1654914108142'
  alias: "\U0001F518 Bedside Button Right [New]"
  description: ''
  use_blueprint:
    path: cow/aqara-buttons-all-in-one-zigbee2mqtt.yaml
    input:
      action_sensor: sensor.bedroom_button_right_action
      single_action:
      - service: light.toggle
        data: {}
        target:
          entity_id:
          - light.bedside_lamps
      double_action:
      - service: light.turn_off
        data: {}
        target:
          area_id: master_bedroom
- id: '1672126071304'
  alias: ❄️ Turn off AC when all zones off
  description: ''
  trigger:
  - platform: state
    entity_id:
    - switch.daikin_ac_living
    - switch.daikin_ac_bedroom
    - switch.daikin_ac_studio
    - switch.daikin_ac_paul_office
    - switch.daikin_ac_kitchen
    - switch.daikin_ac_guest
    to: 'off'
    for:
      hours: 0
      minutes: 0
      seconds: 10
  condition:
  - condition: and
    conditions:
    - condition: state
      entity_id: switch.daikin_ac_living
      state: 'off'
    - condition: state
      entity_id: switch.daikin_ac_bedroom
      state: 'off'
    - condition: state
      entity_id: switch.daikin_ac_studio
      state: 'off'
    - condition: state
      entity_id: switch.daikin_ac_paul_office
      state: 'off'
    - condition: state
      entity_id: switch.daikin_ac_kitchen
      state: 'off'
    - condition: state
      entity_id: switch.daikin_ac_guest
      state: 'off'
  action:
  - device_id: 76a75cc30a41bb11a3e36481c72c0406
    domain: climate
    entity_id: 065dfc184b92e3e38b5a0a73d701811b
    type: set_hvac_mode
    hvac_mode: 'off'
  mode: single
- id: '1673999081128'
  alias: ❄️ Turn on AC when any switch turns on
  description: ''
  trigger:
  - platform: state
    entity_id:
    - switch.daikin_ac_any_rooms_on
    from: 'off'
    to: 'on'
    for:
      hours: 0
      minutes: 0
      seconds: 10
  condition:
  - condition: state
    entity_id: climate.daikin_ac
    attribute: hvac_action
    state: 'off'
  action:
  - device_id: b234bba5e861252c22c666fd42dc0f0b
    domain: climate
    entity_id: climate.daikin_ac
    type: set_hvac_mode
    hvac_mode: cool
  mode: single
- id: '1674084251043'
  alias: "\U0001F6E0️ Update OpenUV"
  description: Update UV indexes
  trigger:
  - platform: time_pattern
    minutes: /6
  condition:
  - condition: sun
    after: sunrise
    before: sunset
    before_offset: +00:40:00
  - condition: template
    value_template: "{{\n  state_attr('automation.update_openuv', 'last_triggered')
      == None\n  or (\n    now() - state_attr('automation.update_openuv', 'last_triggered')\n
      \ ) >= timedelta(hours = 0, minutes = 36)\n}}"
  action:
  - service: homeassistant.update_entity
    target:
      entity_id:
      - binary_sensor.protection_window
      - sensor.current_uv_index
    data: {}
- id: '1674108881656'
  alias: "\U0001F518 Attic Light Switch"
  description: ''
  use_blueprint:
    path: cow/aqara-buttons-all-in-one-zigbee2mqtt.yaml
    input:
      action_sensor: sensor.attic_light_switch_action
      single_action:
      - service: light.toggle
        data: {}
        target:
          entity_id:
          - light.attic_light
      double_action: []
- id: '1675227458252'
  alias: ❄️ Remember Daikin AC last active mode
  description: ''
  trigger:
  - entity_id:
    - sensor.daikin_ac_active_mode
    platform: state
  condition:
  - condition: template
    value_template: '{{ trigger.to_state.state not in ["off", "", None]  }}'
  action:
  - service: input_text.set_value
    data:
      value: '{{trigger.to_state.state}}'
    target:
      entity_id: input_text.daikin_ac_last_active_mode
  mode: single
- id: '1675553894245'
  alias: "\U0001F4EC Mailbox Alarm"
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.mailbox_lid_contact
    from: 'off'
    to: 'on'
  condition:
  - condition: or
    conditions:
    - condition: state
      entity_id: input_select.mailbox_alarm_enabled
      state: Primed
    - condition: and
      conditions:
      - condition: state
        entity_id: input_select.mailbox_alarm_enabled
        state: Overnight
      - condition: time
        before: input_datetime.mailbox_alarm_off
        after: input_datetime.mailbox_alarm_on
  action:
  - service: script.activate_z2m_siren
    data:
      siren_entity: switch.siren_1_alarm
      melody_entity: select.siren_1_melody
      volume_entity: select.siren_1_volume
      duration_entity: number.siren_1_duration
      volume: '{{ states(''input_select.mailbox_alarm_volume'') }}'
      melody_id: 7
      duration: 10
  - delay:
      hours: 0
      minutes: 0
      seconds: 2
      milliseconds: 0
  - service: light.turn_on
    data:
      color_temp: 298
      brightness_pct: 100
      flash: long
    target:
      entity_id: light.front_floodlight
  - delay:
      hours: 0
      minutes: 0
      seconds: 30
      milliseconds: 0
  - service: light.turn_off
    data: {}
    target:
      entity_id: light.front_floodlight
  - service: notify.telegram_paul
    data:
      message: Mailbox alarm triggered!
  mode: single
- id: '1675569516468'
  alias: "\U0001F4A1 Turn off floodlight when power restored"
  description: ''
  trigger:
  - platform: state
    entity_id:
    - light.front_floodlight
    - light.rear_floodlight
    from: unavailable
    for:
      hours: 0
      minutes: 0
      seconds: 0
  condition: []
  action:
  - service: light.turn_off
    data: {}
    target:
      entity_id: '{{ trigger.entity_id }}'
  mode: single
- id: '1675737278039'
  alias: ⚡ Dishwasher monitor
  description: ''
  use_blueprint:
    path: leofabri/appliance-status-monitor.yaml
    input:
      appliance_socket: switch.dishwasher
      appliance_power_sensor: sensor.dishwasher_power
      appliance_starting_power_threshold: 20
      appliance_finishing_power_threshold: 2
      appliance_state_machine: input_select.dishwasher_state_machine
      appliance_job_cycle: input_boolean.dishwasher_job_cycle
      delayed_job_completion_timer: timer.dishwasher_delayed_job_completion_timer
      automation_self_trigger: input_boolean.dishwasher_automation_self_trigger
      delayed_job_completion_duration: 400
- id: '1680916072145'
  alias: Backup every Sunday
  description: ''
  trigger:
  - platform: time
    at: 02:00:00
  condition:
  - condition: template
    value_template: '{{ now().weekday() == 6 }}'
  action:
  - service: backup.create
    data: {}
  mode: single
- id: '1685229006241'
  alias: ✈️ Enable flight board when in range [new]
  description: ''
  trigger:
  - platform: state
    entity_id:
    - sensor.gobo_notifiable_aircraft
    not_to:
    - unknown
    - unavailable
    id: notifiable_enter
  - platform: state
    entity_id:
    - sensor.gobo_notifiable_aircraft
    to: unknown
    id: notifiable_leave
  - platform: state
    entity_id:
    - sensor.gobo_closest_aircraft_barometric_altitude
    id: altitude_change
    to: '9998'
  - platform: state
    entity_id:
    - sensor.gobo_closest_aircraft_ground_speed
    id: speed_change
    to: '9997'
  condition:
  - condition: template
    value_template: '{{ trigger.to_state.state != trigger.from_state.state }}'
  action:
  - choose:
    - conditions:
      - condition: trigger
        id:
        - notifiable_enter
      sequence:
      - service: mqtt.publish
        data:
          qos: 0
          retain: false
          topic: awtrix_d69578/custom/flightinfo
          payload: "{%- set flight = state_attr('sensor.gobo_closest_aircraft', 'flight_number')
            | default(\"??????\") | trim -%} {%- set airline = flight | regex_findall_index(find='^[A-Za-z]+')
            -%} {%- set flnum = flight | regex_replace(find='^[A-Za-z]+', replace='')
            -%} {%- set airline_col_map = {\"QFA\": [\"#ff0000\", \"#ffffff\"], \"QLK\":
            [\"#ff0000\", \"#ffffff\"], \"JST\": [\"#ff8000\", \"#bbbbbb\"], \"VOZ\":
            [\"#ff00ff\", \"#ffffff\"], \"RXA\": [\"#004a86\", \"#f37c1b\"], \"CES\":
            [\"#d70819\", \"#0b3393\"], \"QTR\": [\"#5c0632\", \"#747f8a\"]} -%} {%-
            set airline_col = \"#ffffff\" -%} {%- set flight_col = \"#ccffcc\" -%}
            {%- if airline in airline_col_map -%}\n  {%- set airline_col = airline_col_map[airline][0]
            -%}\n  {%- set flight_col = airline_col_map[airline][1] -%}\n{%- endif
            -%} {%- set typecode = state_attr('sensor.gobo_closest_aircraft', 'type_code')
            | default(\"???\") | trim -%} {%- set from = state_attr('sensor.gobo_closest_aircraft',
            'route')['FromIata'] | default(state_attr('sensor.gobo_closest_aircraft',
            'route')['FromIcao']) | default(\"???\") | trim  -%} {%- set to = state_attr('sensor.gobo_closest_aircraft',
            'route')['ToIata'] | default(state_attr('sensor.gobo_closest_aircraft',
            'route')['ToIcao']) | default(\"???\") | trim  -%}{%- set alt = ((states('sensor.gobo_closest_aircraft_barometric_altitude')
            \ | default(0) | float(0)) * 3.28084) | round(0)  -%} {%- set alt_icon
            = \"7463\" -%} {%- if (state_attr('sensor.gobo_closest_aircraft_barometric_altitude',
            'rate') |int(0)) > 0 -%} {%- set alt_icon = \"7465\" -%} {%- endif -%}{%-
            set speed = ((states('sensor.gobo_closest_aircraft_ground_speed') | default(0)
            | float(0) ) * 1.852) | round(0) -%} [ {\"text\": [{\"t\": \"{{ airline
            }}\", \"c\": \"{{ airline_col }}\"},{\"t\": \"{{ flnum }}\", \"c\": \"{{
            flight_col }}\"}], \"progress\": 0}, {\"text\": \"{{ typecode }}\", \"progress\":
            25}, {\"text\": [{\"t\": \"{{ from }}\" }, {\"t\": \">\", \"c\": \"#303030\"},
            \ {\"t\": \"{{ to }}\"} ], \"progress\": 50}, {\"text\": [ {\"t\": \"{{
            alt }}\"}, {\"t\": \"ft\", \"c\": \"#402020\"} ], \"progress\": 75}, {\"text\":
            [ {\"t\": \"{{ speed }}\"}, {\"t\": \"kmh\", \"c\": \"#202040\"}  ], \"progress\":
            100}]"
      - delay:
          hours: 0
          minutes: 0
          seconds: 0
          milliseconds: 250
      - service: mqtt.publish
        data:
          qos: 0
          retain: false
          topic: awtrix_d69578/switch
          payload: '{"name":"flightinfo0"}'
      - delay:
          hours: 0
          minutes: 0
          seconds: 0
          milliseconds: 250
      - service: mqtt.publish
        data:
          topic: awtrix_d69578/power
          payload: '{"power": true}'
          qos: '0'
    - conditions:
      - condition: trigger
        id:
        - notifiable_leave
      sequence:
      - service: mqtt.publish
        data:
          topic: awtrix_d69578/power
          payload: '{"power": false}'
          qos: '0'
    - conditions:
      - condition: trigger
        id:
        - altitude_change
      - condition: not
        conditions:
        - condition: state
          entity_id: sensor.gobo_notifiable_aircraft
          state: unknown
      sequence:
      - service: mqtt.publish
        data:
          qos: 0
          retain: false
          topic: awtrix_d69578/custom/flightinfo3
          payload: '{%- set alt = ((states(''sensor.gobo_closest_aircraft_barometric_altitude'')  |
            default(0) | float(0)) * 3.28084) | round(0)  -%} {%- set alt_icon = "7463"
            -%} {%- if (state_attr(''sensor.gobo_closest_aircraft_barometric_altitude'',
            ''rate'') |int(0)) > 0 -%} {%- set alt_icon = "7465" -%} {%- endif -%}{%-
            set speed = ((states(''sensor.gobo_closest_aircraft_ground_speed'') |
            default(0) | float(0) ) * 1.852) | round(0) -%} {"text": [ {"t": "{{ alt
            }}"}, {"t": "ft", "c": "#402020"} ], "progress": 75}'
    - conditions:
      - condition: trigger
        id:
        - speed_change
      - condition: not
        conditions:
        - condition: state
          entity_id: sensor.gobo_notifiable_aircraft
          state: unknown
      sequence:
      - service: mqtt.publish
        data:
          qos: 0
          retain: false
          topic: awtrix_d69578/custom/flightinfo4
          payload: '{%- set speed = ((states(''sensor.gobo_closest_aircraft_ground_speed'')
            | default(0) | float(0) ) * 1.852) | round(0) -%} {"text": [ {"t": "{{
            speed }}"}, {"t": "kmh", "c": "#202040"}  ], "progress": 100}'
  mode: queued
  max: 50
- id: '1686907407641'
  alias: ♨️ Start toilet heater off timer
  description: ''
  trigger:
  - platform: state
    entity_id:
    - switch.outdoor_toilet_heater
    to: 'on'
  condition: []
  action:
  - service: timer.start
    data: {}
    target:
      entity_id: timer.outdoor_toilet_heater_timer
  mode: single
- id: '1686907633320'
  alias: ♨️ Turn off outdoor toilet when timer done
  description: ''
  trigger:
  - platform: event
    event_type: timer.finished
    event_data:
      entity_id: timer.outdoor_toilet_heater_timer
  - platform: state
    entity_id:
    - binary_sensor.outdoor_toilet_motion_sensor_occupancy
    from: 'on'
    to: 'off'
    for:
      hours: 0
      minutes: 3
      seconds: 0
  - platform: state
    entity_id:
    - switch.outdoor_toilet_heater
    to: 'on'
    for:
      hours: 0
      minutes: 30
      seconds: 0
  condition:
  - condition: state
    entity_id: switch.outdoor_toilet_heater
    state: 'on'
  action:
  - service: switch.turn_off
    data: {}
    target:
      entity_id: switch.outdoor_toilet_heater
  mode: single
- id: '1686907929421'
  alias: ♨️ Switch toilet heater to detect mode
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.outdoor_toilet_motion_sensor_occupancy
    from: 'off'
    to: 'on'
  condition:
  - condition: state
    entity_id: switch.outdoor_toilet_heater
    state: 'on'
  action:
  - service: timer.cancel
    data: {}
    target:
      entity_id: timer.outdoor_toilet_heater_timer
  mode: single
- id: '1687497252624'
  alias: "\U0001F321️ Sleep Mode - Guest Room"
  description: ''
  use_blueprint:
    path: cow/climate_sleep_mode.yaml
    input:
      climate_entity: climate.daikin_guest_room
      master_switch: input_boolean.sleep_mode_enabled_guest_room
      start_time: input_datetime.sleep_mode_start_guest_room
      end_time: input_datetime.sleep_mode_end_guest_room
      temperature_input: input_number.sleep_mode_temperature_guest_room
- id: '1687498668027'
  alias: "\U0001F321️ Sleep Mode - Studio"
  description: ''
  use_blueprint:
    path: cow/climate_sleep_mode.yaml
    input:
      climate_entity: climate.studio_ac
      master_switch: input_boolean.sleep_mode_enabled_studio
      start_time: input_datetime.sleep_mode_start_studio
      end_time: input_datetime.sleep_mode_end_studio
      temperature_input: input_number.sleep_mode_temperature_studio
- id: '1687499494339'
  alias: "\U0001F321️ Sleep Mode - Bedroom"
  description: ''
  use_blueprint:
    path: cow/climate_sleep_mode.yaml
    input:
      climate_entity: climate.daikin_bedroom
      master_switch: input_boolean.sleep_mode_enabled_bedroom
      start_time: input_datetime.sleep_mode_start_bedroom
      end_time: input_datetime.sleep_mode_end_bedroom
      temperature_input: input_number.sleep_mode_temperature_bedroom
- id: '1687507473577'
  alias: "\U0001F321️ Sleep Mode - Office"
  description: ''
  use_blueprint:
    path: cow/climate_sleep_mode.yaml
    input:
      climate_entity: climate.daikin_paul_office
      master_switch: input_boolean.sleep_mode_enabled_office
      start_time: input_datetime.sleep_mode_start_office
      end_time: input_datetime.sleep_mode_end_office
      temperature_input: input_number.sleep_mode_temperature_office
- id: '1687507526987'
  alias: "\U0001F321️ Sleep Mode - Living Room"
  description: ''
  use_blueprint:
    path: cow/climate_sleep_mode.yaml
    input:
      climate_entity: climate.daikin_living_room
      master_switch: input_boolean.sleep_mode_enabled_living_room
      start_time: input_datetime.sleep_mode_start_living_room
      end_time: input_datetime.sleep_mode_end_living_room
      temperature_input: input_number.sleep_mode_temperature_living_room
- id: '1687507563361'
  alias: "\U0001F321️ Sleep Mode - Kitchen"
  description: ''
  use_blueprint:
    path: cow/climate_sleep_mode.yaml
    input:
      climate_entity: climate.daikin_kitchen
      master_switch: input_boolean.sleep_mode_enabled_kitchen
      start_time: input_datetime.sleep_mode_start_kitchen
      end_time: input_datetime.sleep_mode_end_kitchen
      temperature_input: input_number.sleep_mode_temperature_kitchen
- id: '1689291025182'
  alias: ♨️ Turn off bathroom heater after long time [temp]
  description: ''
  trigger:
  - platform: state
    entity_id:
    - climate.bathroom
    to: heat
    for:
      hours: 0
      minutes: 30
      seconds: 0
  condition: []
  action:
  - service: climate.set_hvac_mode
    data:
      hvac_mode: 'off'
    target:
      entity_id: climate.bathroom
  mode: single
- id: '1692739330103'
  alias: ❄️ Turn off AC failsafe
  description: ''
  trigger:
  - platform: time_pattern
    minutes: /5
  condition:
  - condition: state
    entity_id: switch.daikin_ac_any_rooms_on
    state: 'off'
    for:
      hours: 0
      minutes: 10
      seconds: 0
  - condition: not
    conditions:
    - condition: state
      entity_id: climate.daikin_ac
      state: 'off'
      for:
        hours: 0
        minutes: 0
        seconds: 0
  action:
  - service: climate.set_hvac_mode
    data:
      hvac_mode: 'off'
    target:
      entity_id: climate.daikin_ac
  mode: single
- id: '1692918730552'
  alias: TEMP - office fan
  description: ''
  trigger:
  - platform: state
    entity_id:
    - fan.office_diffuser
    to:
  condition: []
  action: []
  mode: single
