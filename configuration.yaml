homeassistant:
  # Name of the location where Home Assistant is running
  name: Dairy
  # Location required to calculate the time the sun rises and sets
  latitude: !secret latitude
  longitude: !secret longitude
  # Impacts weather/sunrise data (altitude above sea level in meters)
  elevation: !secret elevation
  # metric for Metric, imperial for Imperial
  unit_system: metric
  # Pick yours from here: http://en.wikipedia.org/wiki/List_of_tz_database_time_zones
  time_zone: Australia/Melbourne
  # Customization file
  customize: !include customize.yaml
  auth_providers:
    - type: homeassistant
  external_url: !secret external_url
  internal_url: !secret internal_url
  currency: AUD
  packages: !include_dir_named packages/

logger:
  default: warning
  logs:
    custom_components.virtual_ducted_thermostat: debug
    homeassistant.components.recorder.migration: info

http:
  cors_allowed_origins: !secret cors_allowed_origins
  use_x_forwarded_for: true
  trusted_proxies: !secret trusted_proxies

default_config:

wake_on_lan:

sensor:
  - platform: illuminance
    entity_id: weather.openweathermap
  - platform: alpha_vantage
    api_key: !secret alpha_vantage_api_key
    symbols:
    - symbol: GOOG
      name: Google C
    foreign_exchange:
    - name: AUD_USD
      from: AUD
      to: USD
  - platform: template
    sensors:
      target_aircon_temp:
        friendly_name: 'Target Ducted A/C Temperature'
        unit_of_measurement: '°C'
        value_template: >-
          {% set coldest_target = (states.climate | selectattr('entity_id', 'match', '.*duct.*') | selectattr('state', 'eq', 'cool') | map(attribute='attributes.temperature') | min | default(99)) -%}
          {%- set intake = states['sensor.daikin_ac_inside_temperature'].state | int -%}
          {{ max(min(coldest_target, intake) - 2.0, 9) }}
      lilyfield_temperature:
        friendly_name: 'Lilyfield Temperature'
        unit_of_measurement: '°C'
        value_template: "{{ state_attr('weather.lilyfield', 'temperature') }}"
      living_room_window_light_summary:
        friendly_name: 'Living Room Window Light'
        # https://en.wikipedia.org/wiki/Lux
        value_template: >-
          {%- if is_state("sensor.living_room_window_light_sensor", "unavailable") -%}
            unavailable
          {%- else -%}
            {%- set lux = states['sensor.living_room_window_light_sensor'].state | int -%}
            {%- if (lux > 30000) -%}
              direct_sun
            {%- elif (lux > 8000) -%}
              indirect_sun
            {%- elif (lux > 150) -%}
              overcast
            {%- elif (lux > 30) -%}
              dim
            {%- else -%}
              dark
            {%- endif -%}
          {%- endif -%}
      daikin_ac_active_mode:
        friendly_name: 'Daikin AC Active Mode'
        value_template: '{{ states.climate | selectattr("entity_id", "match", ".*daikin.*") | selectattr("state", "ne", "off") | map(attribute="state") | first | default("off") }}'
  - platform: untappd
    username: !secret untappd_username
    id: !secret untappd_id
    secret: !secret untappd_secret
  - platform: waqi
    token: !secret waqi_token
    locations:
      - !secret waqi_location
  - platform: seventeentrack
    username: !secret seventeentrack_email
    password: !secret seventeentrack_password
  - platform: rest
    name: listenbrainz_thecowan
    resource: https://api.listenbrainz.org/1/user/thecowan/listens?count=1
    json_attributes_path: "payload.listens[0].track_metadata"
    json_attributes:
      - "track_name"
      - "artist_name"
      - "release_name"
    value_template: '{{ value_json.payload.listens[0].listened_at|timestamp_utc }}'
  - platform: transport_nsw
    stop_id: "2040100"
    api_key: !secret tfnsw_api_key
    route: "469"
    name: "Next 469"
  - platform: transport_nsw
    stop_id: "204068"
    api_key: !secret tfnsw_api_key
    route: "470"
    name: "Next 470"
  - platform: transport_nsw
    stop_id: "2040115"
    api_key: !secret tfnsw_api_key
    route: "L1"
    destination: "Central"
    name: "Next Light Rail to Central"
  - platform: helium
    hotspots:
      - !secret helium_hotspot_id
    wallets:
      - !secret helium_wallet_id
  - platform: openhardwaremonitor
    host: red
    port: 8093
  - platform: waste_collection_schedule
    name: rubbish

binary_sensor:
  - platform: linode
    nodes: !secret linode_nodes
  - platform: ping
    host: 10.41.62.1
    name: camera-digoo
    scan_interval: 10

# Text to speech
tts:
  - platform: google_translate
    service_name: google_say

panel_iframe:
  configurator:
    title: Configurator
    icon: mdi:wrench
    url: http://pokey.syd.cowlan.net:3218
    require_admin: true


zone:
  - name: !secret zone_work_name
    latitude: !secret zone_work_latitude
    longitude: !secret zone_work_longitude
    radius: 500
    icon: mdi:office-building

device_tracker:
  - platform: google_maps
    username: !secret google_maps_username
    consider_home: 180
    max_gps_accuracy: 200


prometheus:

media_player:
  - platform: onkyo
    host: 10.2.2.29
    name: receiver
    sources:
      # video1_vcr_dvr_stb_dvr
      Video1: 'VCR'
      # video2_cbl_sat
      Video2: 'Sonos'
      # video3_game/tv_game_game1
      Video3: 'Dock'
      Video4: 'Video 4'
      # "video6_pc"
      Video6: 'PC'
      bd: 'Media Center'
      cd: 'TV'
      # video4_aux1
      Aux1: 'Aux'
      # fm unchanged
      # am unchanged
      "universal-port": 'Port'

notify:
#  - platform: pushbullet
#  api_key: !secret pushbullet_api_key
#  - name: pushover
#    platform: pushover
#    api_key: !secret pushover_api_key
#    user_key: !secret pushover_user_key
  - name: automate_assistant
    platform: llamalab_automate
    api_key: !secret llamalab_secret
    to: !secret llamalab_to
    device: !secret llamalab_device
  - platform: kodi
    name: "Kodi cow-macbookpro"
    host: 10.41.11.2
    port: 8788
    username: !secret kodi_username
    password: !secret kodi_password
  - platform: telegram
    name: telegram_paul
    chat_id: !secret telegram_paul_id


linode:
  access_token: !secret linode_access_token

mqtt:
  #broker: !secret mqtt_broker
  #username: !secret mqtt_username
  #password: !secret mqtt_password
  #certificate: /etc/ssl/certs/ca-certificates.crt
  #port: 8883
  sensor:
    - state_topic: "owntracks/paul/raven"
      name: "Battery Paul"
      unit_of_measurement: "%"
      value_template: '{{ value_json.batt }}'
      device_class: battery
    - name: "BBQ Probe 1"
      state_topic: "inkbird/aced94/probe1"
      unique_id: temperature_bbq_probe1
      unit_of_measurement: "°C"
      device_class: "temperature"
      expire_after: 300
    - name: "BBQ Probe 2"
      state_topic: "inkbird/aced94/probe2"
      unique_id: temperature_bbq_probe2
      unit_of_measurement: "°C"
      device_class: "temperature"
      expire_after: 300
    - name: "BBQ Probe 3"
      state_topic: "inkbird/aced94/probe3"
      unique_id: temperature_bbq_probe3
      unit_of_measurement: "°C"
      device_class: "temperature"
      expire_after: 300
    - name: "BBQ Probe 4"
      state_topic: "inkbird/aced94/probe4"
      unique_id: temperature_bbq_probe4
      unit_of_measurement: "°C"
      device_class: "temperature"
      expire_after: 300
    - name: "BBQ Probe 5"
      state_topic: "inkbird/aced94/probe5"
      unique_id: temperature_bbq_probe5
      unit_of_measurement: "°C"
      device_class: "temperature"
      expire_after: 300
    - name: "BBQ Probe 6"
      state_topic: "inkbird/aced94/probe6"
      unique_id: temperature_bbq_probe6
      unit_of_measurement: "°C"
      device_class: "temperature"
      expire_after: 300
    - name: "BBQ Probe Battery"
      state_topic: "inkbird/aced94/batteryLevel"
      unique_id: battery_bbq_probe
      unit_of_measurement: "%"
      device_class: "battery"
    - name: "BBQ Backup Probe 1"
      state_topic: "inkbird/abdd44/probe1"
      unique_id: temperature_bbq_backup_probe1
      unit_of_measurement: "°C"
      device_class: "temperature"
      expire_after: 300
    - name: "BBQ Backup Probe 2"
      state_topic: "inkbird/abdd44/probe2"
      unique_id: temperature_bbq_backup_probe2
      unit_of_measurement: "°C"
      device_class: "temperature"
      expire_after: 300
    - name: "BBQ Backup Probe 3"
      state_topic: "inkbird/abdd44/probe3"
      unique_id: temperature_bbq_backup_probe3
      unit_of_measurement: "°C"
      device_class: "temperature"
      expire_after: 300
    - name: "BBQ Backup Probe 4"
      state_topic: "inkbird/abdd44/probe4"
      unique_id: temperature_bbq_backup_probe4
      unit_of_measurement: "°C"
      device_class: "temperature"
      expire_after: 300
    - name: "BBQ Backup Probe 5"
      state_topic: "inkbird/abdd44/probe5"
      unique_id: temperature_bbq_backup_probe5
      unit_of_measurement: "°C"
      device_class: "temperature"
      expire_after: 300
    - name: "BBQ Backup Probe 6"
      state_topic: "inkbird/abdd44/probe6"
      unique_id: temperature_bbq_backup_probe6
      unit_of_measurement: "°C"
      device_class: "temperature"
      expire_after: 300
    - name: "BBQ Backup Probe Battery"
      state_topic: "inkbird/abdd44/batteryLevel"
      unique_id: battery_bbq_backup_probe
      unit_of_measurement: "%"
      device_class: "battery"

group: !include groups.yaml

automation: !include automations.yaml

script: !include scripts.yaml

# mqtt_eventstream:
#  publish_topic: homeassistant/events/master

#mqtt_statestream:
#  base_topic: homeassistant
#  publish_timestamps: true
#  publish_attributes: true


var:
  receiver_last_state:
    friendly_name: Receiver Last State
    initial_value: off
    restore: true
    unique_id: var_receiver_last_state_1
  receiver_last_volume:
    friendly_name: Receiver Last Volume
    initial_value: 0
    restore: true
    unique_id: var_receiver_last_volume_1
  receiver_last_source:
    friendly_name: Receiver Last Source
    initial_value: none
    restore: true
    unique_id: var_receiver_last_source_1

light:
  - platform: group
    name: Bedside Lamps
    entities:
      - light.bedside_left
      - light.bedside_right
  - platform: group
    name: Kitchen Downlights
    entities:
      - light.kitchen_downlight_near
      - light.kitchen_downlight_far
      - light.kitchen_downlight_centre
  - platform: template
    lights:
      office_ring_light_template:
        friendly_name: "Office Ring Test"
        unique_id: template_light_office_ring_light
        value_template: >-
          {% if is_state('light.office_ring_light_white', 'on') %}
            on
          {% elif is_state('light.office_ring_light_colour', 'on') %}
            on
          {% else %}
            off
          {% endif %}
        turn_on:
          service: light.turn_on
          target:
            entity_id: >-
              {% if is_state('input_text.office_ring_light_last_mode', '') %}
                light.office_ring_light_white
              {% elif is_state('input_text.office_ring_light_last_mode', 'unknown') %}
                light.office_ring_light_white
              {% else %}
                {{ states['input_text.office_ring_light_last_mode'].state }}
              {% endif %}
        turn_off:
          - service: light.turn_off
            target:
              entity_id: light.office_ring_light_white
          - service: light.turn_off
            target:
              entity_id: light.office_ring_light_colour
        availability_template: >-
          {% if is_state('light.office_ring_light_white', 'unavailable') %}
            false
          {% elif is_state('light.office_ring_light_colour', 'unavailable') %}
            false
          {% else %}
            true
          {% endif %}
        level_template: >-
          {{ state_attr('light.office_ring_light_master', 'brightness') }}
        effect_template: "{{ state_attr('light.office_ring_light_colour', 'effect') }}"
        effect_list_template: "{{ state_attr('light.office_ring_light_colour', 'effect_list') }}"
        #temperature_template: "{{states('input_number.temperature_input') | int}}"
        color_template: >-
          {% if is_state('light.office_ring_light_colour', 'on') %}
            {{ state_attr('light.office_ring_light_colour', 'hs_color') }}
          {% endif %}
        #white_value_template
        #set_white_value:
        #supports_transition_template
        min_mireds_template: "100"
        max_mireds_template: "500"
        #icon_template
        set_level:
          service: light.turn_on
          target:
            entity_id: >-
              light.office_ring_light_master
          data:
            brightness: "{{ brightness }}"
        set_temperature:
          - service: light.turn_off
            target:
              entity_id: light.office_ring_light_colour
            data:
              transition: 0
          - service: light.turn_on
            target:
              entity_id: light.office_ring_light_white
            data:
              rgbw_color:
              - >-
                {% set kelvin = 1000000 / color_temp %}
                {% if kelvin > 8050 %}
                 {% set r_comp = 225 - ((kelvin - 8080) / 86) %}
                {% elif kelvin >= 6600 %}
                 {% set r_comp = 254 - ((kelvin - 6600) / 50) %}
                {% else %}
                 {% set r_comp = 255 %}
                {% endif %}
                {{ r_comp }}
              - 255
              - >-
                {% set kelvin = 1000000 / color_temp %}
                {% if kelvin >= 6600 %}
                 {% set b_comp = 255 %}
                {% else %}
                 {% if kelvin > 5700 %}
                  {% set x = 5700 %}
                  {% set y = 230 %}
                  {% set z = 34 %}
                 {% elif kelvin > 5100 %}
                  {% set x = 5100 %}
                  {% set y = 210 %}
                  {% set z = 30 %}
                 {% elif kelvin > 4500 %}
                  {% set x = 4500 %}
                  {% set y = 186 %}
                  {% set z = 25 %}
                 {% elif kelvin > 3906 %}
                  {% set x = 3906 %}
                  {% set y = 159 %}
                  {% set z = 22 %}
                 {% elif kelvin > 3398 %}
                  {% set x = 3398 %}
                  {% set y = 132 %}
                  {% set z = 19 %}
                 {% elif kelvin > 2900 %}
                  {% set x = 2900 %}
                  {% set y = 101 %}
                  {% set z = 16 %}
                 {% elif kelvin > 2492 %}
                  {% set x = 2492 %}
                  {% set y = 72 %}
                  {% set z = 14 %}
                 {% elif kelvin > 2100 %}
                  {% set x = 2100 %}
                  {% set y = 33 %}
                  {% set z = 10 %}
                 {% else %}
                  {% set x = 1900 %}
                  {% set y = 0 %}
                  {% set z = 6 %}
                 {% endif %}
                 {% set b_comp = ((kelvin - x) / z) + y %}
                {% endif %}
                {{ b_comp }}
              - 255
        set_color:
          - service: light.turn_off
            target:
              entity_id: light.office_ring_light_white
            data:
              transition: 0
          - service: light.turn_on
            target:
              entity_id: light.office_ring_light_colour
            data:
              effect: "solid"
              hs_color:
                - "{{ hs[0] }}"
                - "{{ hs[1] }}"
        set_effect:
          - service: light.turn_off
            target:
              entity_id: light.office_ring_light_white
            data:
              transition: 0
          - service: light.turn_on
            target:
              entity_id: light.office_ring_light_colour
            data:
              effect: "{{ effect }}"


google_assistant:
  project_id: !secret google_assistant_project_id
  service_account: !include dairy-homeassistant-95707-15c4e03cb81f.json
  report_state: true
  secure_devices_pin: !secret google_assistant_secure_devices_pin
  exposed_domains:
    - script
    - climate
    - cover
  entity_config:
    climate.dot_s_office_ac:
      expose: false
    climate.dots_office_ac:
      expose: false
    climate.test_ac_2:
      expose: false
    climate.daikin_ac:
      expose: false

    fan.office_diffuser:
      expose: true
      room: Office

    light.attic_light:
      expose: true
      room: Attic
    light.yeelight_bedroom:
      expose: true
      room: Bedroom
    light.bedside_lamps:
      expose: true
      room: Bedroom
    light.dining_room:
      expose: true
      room: Dining Room
    light.dot_floor_lamp:
      expose: true
      room: Dot's Office
    light.dot_floor_lamp_spotlight:
      expose: true
      room: Dot's Office
    light.dot_office_light:
      expose: true
      room: Dot's Office
    light.front_floodlight:
      expose: true
      room: Entry
    light.yeelight_entry:
      expose: true
      room: Entry
    light.yeelight_guestroom:
      expose: true
      room: Guest Room
    light.kitchen_downlights:
      expose: true
      room: Kitchen
    light.yeelight_livingroom:
      expose: true
      room: Living Room
    light.yeelight_office:
      expose: true
      room: Office
    light.office_ring_light:
      expose: true
      room: Office
    light.outside_globes:
      expose: true
      room: Outside
    light.rear_floodlight:
      expose: true
      room: Outside
    light.front_floodlight:
      expose: true
      room: Entry

    switch.apple_iigs_monitor:
      expose: true
      room: Office

    camera.porch:
      expose: true
      room: Entry
    camera.living_room:
      expose: true
      room: Living Room


lovelace:
  mode: yaml
  resources:
    - url: "/hacsfiles/lovelace-wallpanel/wallpanel.js"
      type: module
    - url: "/hacsfiles/ha-floorplan/floorplan.js"
      type: module
    - url: "/hacsfiles/bom-weather-card/bom-weather-card.js"
      type: module
    - url: "/hacsfiles/ha-card-weather-conditions/ha-card-weather-conditions.js"
      type: module
    - url: "/hacsfiles/simple-weather-card/simple-weather-card-bundle.js"
      type: module
    - url: "/hacsfiles/platinum-weather-card/platinum-weather-card.js"
      type: module
    - url: "/hacsfiles/clock-weather-card/clock-weather-card.js"
      type: module
    - url: "/hacsfiles/kiosk-mode/kiosk-mode.js"
      type: module
    - url: "/local/climate-fan-button-row/climate-fan-button-row.js"
      type: module
    - url: "https://cdn.jsdelivr.net/npm/rgb-light-card"
      type: module
    - url: '/hacsfiles/home-assistant-sun-card/home-assistant-sun-card.js'
      type: module
    - url: '/hacsfiles/battery-state-card/battery-state-card.js'
      type: module
    - url: '/hacsfiles/button-card/button-card.js'
      type: module
    - url: '/hacsfiles/mini-graph-card/mini-graph-card-bundle.js'
      type: module
    - url: '/hacsfiles/tv-card/tv-card.js'
      type: module
    - url: '/hacsfiles/mini-media-player/mini-media-player-bundle.js'
      type: module
    - url: '/hacsfiles/simple-thermostat/simple-thermostat.js'
      type: module
    - url: '/hacsfiles/lovelace-thermostat-card/main.js'
      type: module
    - url: '/hacsfiles/lovelace-thermostat-dark-card/thermostat-dark-card.js'
      type: module
    - url: '/hacsfiles/lovelace-slider-entity-row/slider-entity-row.js'
      type: module
    - url: '/hacsfiles/compass-card/compass-card.js'
      type: module
    - url: '/hacsfiles/garbage-collection-card/garbage-collection-card.js'
      type: module
    - url: '/hacsfiles/fan-control-entity-row/fan-control-entity-row.js'
      type: module
    - url: '/hacsfiles/fan-mode-button-row/fan-mode-button-row.js'
      type: module
    - url: '/hacsfiles/config-template-card/config-template-card.js'
      type: module
    - url: '/hacsfiles/decluttering-card/decluttering-card.js'
      type: module
    - url: '/hacsfiles/canvas-gauge-card/canvas-gauge-card.js'
      type: module
    - url: '/hacsfiles/PlantPictureCard/PlantPictureCard.js'
      type: module
    - url: '/hacsfiles/miflora-card/miflora-card.js'
      type: module
    - url: '/hacsfiles/uptime-card/uptime-card.js'
      type: module
    - url: '/hacsfiles/apexcharts-card/apexcharts-card.js'
      type: module
    - url: '/hacsfiles/lovelace-auto-entities/auto-entities.js'
      type: module
    - url: '/hacsfiles/bom-radar-card/bom-radar-card.js'
      type: module
    - url: '/hacsfiles/lovelace-fold-entity-row/fold-entity-row.js'
      type: module
    - url: '/hacsfiles/fr24_card/fr24_card.js'
      type: module
    - url: '/hacsfiles/ha-sankey-chart/ha-sankey-chart.js'
      type: module
    - url: '/hacsfiles/thermal_comfort_icons/thermal_comfort_icons.js'
      type: module
    - url: '/hacsfiles/frigate-hass-card/frigate-hass-card.js'
      type: module
    - url: '/hacsfiles/custom-brand-icons/custom-brand-icons.js'
      type: js
    - url: '/hacsfiles/mini-climate-card/mini-climate-card-bundle.js'
      type: module
    - url: '/hacsfiles/lovelace-windrose-card/windrose-card.js'
      type: module
    - url: '/hacsfiles/light-entity-card/light-entity-card.js'
      type: module
    - url: '/hacsfiles/lovelace-card-mod/card-mod.js'
      type: module
    - url: '/hacsfiles/my-cards/my-cards.js'
      type: module
    - url: '/hacsfiles/lovelace-layout-card/layout-card.js'
      type: module
  dashboards:
    lovelace-reporting:
      mode: yaml
      title: Reporting
      filename: ui-reporting.yaml
      show_in_sidebar: true
      require_admin: true
      icon: mdi:chart-areaspline
    lovelace-auto:
      mode: yaml
      title: Auto
      filename: ui-nonexistent.yaml
      show_in_sidebar: true
      require_admin: true
      icon: mdi:robot-industrial
    clock-bedroom:
      mode: yaml
      title: Bedroom Clock
      filename: ui-clock-bedroom.yaml
      show_in_sidebar: false
      require_admin: false
      icon: mdi:clock-digital
    clock-office:
      mode: yaml
      title: Office Clock
      filename: ui-clock-office.yaml
      show_in_sidebar: false
      require_admin: false
      icon: mdi:clock-digital
    clock-dot-office:
      mode: yaml
      title: Dot Office Clock
      filename: ui-clock-dot-office.yaml
      show_in_sidebar: false
      require_admin: false
      icon: mdi:clock-digital

input_boolean:
  guest_mode:
    name: Guest Mode
    icon: mdi:account-multiple-plus

climate:
  - platform: generic_thermostat
    name: Beer Fridge
    heater: switch.beer_fridge_plug
    target_sensor: sensor.beer_fridge_temperature
    unique_id: beer_fridge_thermostat_lumi_plug
    min_temp: 5
    max_temp: 20
    ac_mode: true
    min_cycle_duration:
      seconds: 300
    keep_alive: "00:05:00"
  # Example of a single generic heater thermo
  #- platform: generic_thermostat
  #  name: Living Room
  #  heater: switch.livingroom_heater
  #  target_sensor: sensor.living_room_temperature
  #  unique_id: livingroom_heater_thermostat_zsp001b
  #  min_temp: 10
  #  max_temp: 30
  #  min_cycle_duration:
  #    seconds: 300
  #  keep_alive: "00:05:00"
  #  cold_tolerance: 0.5
  # Old manual daikin setup
  #- platform: generic_thermostat
  #  name: "Living Room Ducted Cooling"
  #  heater: switch.daikin_ac_living
  #  ac_mode: true
  #  target_sensor: sensor.living_room_temperature
  #  unique_id: generic_thermostat_daikin_ducted_living_room_cooling
  #  min_temp: 7
  #  max_temp: 35
  #  min_cycle_duration:
  #    seconds: 300
  #  #keep_alive: "00:05:00"
  #  cold_tolerance: 0.4
  #  hot_tolerance: 0.4
  #  precision: 1.0
  # Old SmartIR
  #- platform: smartir
  #  name: "Living Room AC"
  #  unique_id: living_room_ac
  #  device_code: 1101
  #  controller_data: remote.guest_room_remote
  #  temperature_sensor: sensor.living_room_temperature
  #  humidity_sensor: sensor.humidity_livingroom
  #
  #  Old climate_template
  #- platform: climate_template
  #  name: Paul Office
  #  unique_id: climate_template_daikin_ducted_paul_office
  #  modes:
  #    - "fan_only"
  #    - "dry"
  #    - "cool"
  #    - "heat"
  #    - "off"
  #    # - "heat_cool"
  #  fan_modes:
  #    - "Auto"
  #    - "Low"
  #    - "Mid"
  #    - "High"
  #    #- "Low/Auto"
  #    #- "Mid/Auto"
  #    #- "High/Auto"
  #  min_temp: 7
  #  max_temp: 35
  #  current_temperature_template: "{{ states('sensor.office_temperature') }}"
  #  current_humidity_template: "{{ states('sensor.office_humidity') }}"
  #  fan_mode_template: '{{ state_attr("climate.daikin_ac", "fan_mode") }}'
  #  hvac_mode_template: '{%if is_state("switch.daikin_ac_paul_office", "off") -%}off{%- else -%}{{ state_attr("climate.daikin_ac", "hvac_action") }}{%- endif %}'
  #  availability_template: '{{ not (is_state("switch.daikin_ac_paul_office", "unavailable") or is_state("climate.daikin_ac", "unavailable")) }}'
  #  target_temperature_template: "{{states('input_number.paul_office_virtual_ac_target_temp')}}"
  #  precision: 1.0

  #  # example action
  #  #set_hvac_mode:
  #  #  - service: esphome.bedroom_node_aircon_state
  #  #    data:
  #  #      temperature: "{{ state_attr('climate.bedroom_aircon', 'temperature') | int }}"
  #  #      operation_mode: "{{ states('climate.bedroom_aircon') }}"
  #  #      fan_mode: "{{ state_attr('climate.bedroom_aircon', 'fan_mode') }}"
  #  #      swing_mode: "{{ is_state_attr('climate.bedroom_aircon', 'swing_mode', 'on') }}"
  #  #      light: "{{ is_state('light.bedroom_aircon_light', 'on') }}"

  - platform: virtual_ducted_thermostat
    name: Daikin Virtual
    central_climate: climate.daikin_ac
    tolerance: 0.5
    parasitic_tolerance: 0.3
    auto_mode: all
    min_cycle_duration:
      seconds: 60
    preset_modes:
      - sleep
    zone:
      - name: "Daikin Paul Office"
        vent_switch: switch.daikin_ac_paul_office
        temp_sensor: sensor.office_temperature
        humidity_sensor: sensor.office_humidity
        unique_id: vdt_daikin_ac_paul_office
      - name: "Daikin Dot Office"
        vent_switch: switch.daikin_ac_dot_office
        temp_sensor: sensor.dots_office_temperature
        humidity_sensor: sensor.dots_office_humidity
        unique_id: vdt_daikin_ac_dot_office
      - name: "Daikin Bedroom"
        vent_switch: switch.daikin_ac_bedroom
        temp_sensor: sensor.bedroom_temperature
        humidity_sensor: sensor.bedroom_humidity
        unique_id: vdt_daikin_ac_bedroom
      - name: "Daikin Guest Room"
        vent_switch: switch.daikin_ac_guest
        temp_sensor: sensor.guest_room_temperature
        humidity_sensor: sensor.guest_room_humidity
        unique_id: vdt_daikin_ac_guest_room
      - name: "Daikin Kitchen"
        vent_switch: switch.daikin_ac_kitchen
        temp_sensor: sensor.beer_fridge_temperature
        humidity_sensor: sensor.beer_fridge_humidity
        unique_id: vdt_daikin_ac_kitchen
      - name: "Daikin Living Room"
        vent_switch: switch.daikin_ac_living
        temp_sensor: sensor.living_room_temperature
        humidity_sensor: sensor.living_room_humidity
        unique_id: vdt_daikin_ac_living

person:
  - name: Paul
    id: paul1
    user_id: d7f6e7ea9e2447229fdda4f8f7119869
    device_trackers:
      - device_tracker.pauls_pixel_6_pro

owntracks:
  max_gps_accuracy: 300
  waypoints: True
  waypoint_whitelist:
    - paul

#zoneminder:
#  - host: !secret zoneminder_host
#    username: !secret zoneminder_username
#    password: !secret zoneminder_password

camera:
#  - platform: zoneminder
  - platform: local_file
    name: "Sydney Weather Radar"
    file_path: /config/bomgrabber/IDR714.composite.gif

proximity:
  home_paul:
    devices:
      device_tracker.pauls_pixel_6_pro
    tolerance: 30

smartir:

#browser_mod:
#  prefix: "browser_"
#  devices:
#    f3e90f74-0a97b878:
#      name: cow-macbookpro2
#    d7a5ab3d_98918e52:
#      name: wallpanel-office

frontend:
  themes: !include_dir_merge_named themes

telegram_bot:
  - platform: webhooks
    api_key: !secret telegram_bot_api_key
    allowed_chat_ids:
      - !secret telegram_paul_id

lock:
  - platform: template
    name: Back Gate
    unique_id: lock_template_back_gate
    value_template: "{{ is_state('switch.gate_lock', 'off') }}"
    lock:
      service: switch.turn_off
      target:
        entity_id: switch.gate_lock
    unlock:
      service: switch.turn_on
      target:
        entity_id: switch.gate_lock

plant:
  rosemary:
    sensors:
      moisture: sensor.rosemary_soil_moisture
      battery: sensor.rosemary_battery
      temperature: sensor.rosemary_temperature
      conductivity: sensor.rosemary_soil_conductivity
      brightness: sensor.rosemary_lux
    min_moisture: 20
  bamboo_lawn:
    sensors:
      moisture: sensor.bamboo_lawn_soil_moisture
      battery: sensor.bamboo_lawn_battery
      temperature: sensor.bamboo_lawn_temperature
      conductivity: sensor.bamboo_lawn_soil_conductivity
      brightness: sensor.bamboo_lawn_lux
    min_moisture: 40
  bamboo_kitchen_window:
    sensors:
      moisture: sensor.bamboo_kitchen_window_soil_moisture
      battery: sensor.bamboo_kitchen_window_battery
      temperature: sensor.bamboo_kitchen_window_temperature
      conductivity: sensor.bamboo_kitchen_window_soil_conductivity
      brightness: sensor.bamboo_kitchen_window_lux
    min_moisture: 40
  hosta_gold_standard:
    sensors:
      moisture: sensor.hosta_gold_standard_soil_moisture
      battery: sensor.hosta_gold_standard_battery
      temperature: sensor.hosta_gold_standard_temperature
      conductivity: sensor.hosta_gold_standard_soil_conductivity
      brightness: sensor.hosta_gold_standard_lux
    min_moisture: 40
  lavender:
    sensors:
      moisture: sensor.lavender_soil_moisture
      battery: sensor.lavender_battery
      temperature: sensor.lavender_temperature
      conductivity: sensor.lavender_soil_conductivity
      brightness: sensor.lavender_lux
    min_moisture: 20
  jasmine:
    sensors:
      moisture: sensor.jasmine_soil_moisture
      battery: sensor.jasmine_battery
      temperature: sensor.jasmine_temperature
      conductivity: sensor.jasmine_soil_conductivity
      brightness: sensor.jasmine_lux
    min_moisture: 20

calendar:
  - platform: entities_calendar
    calendars:
      name: Entity Calendar
      entities:
        - entity: sensor.cert_expiry_timestamp_prometheus_cowlan_net
        - entity: sensor.cert_expiry_timestamp_wildcard_cowlan_net

template:
  - unique_id: adsb
    sensor:
    - name: 'gobo Notifiable Aircraft'
      unique_id: gobo_notifiable_aircraft
      state: >-
        {%- set distance = states("sensor.gobo_closest_aircraft_distance") | float(1000000) -%}
        {%- set alt = states("sensor.gobo_closest_aircraft_barometric_altitude") | float(1000000) -%}
        {%- set bearing = states("sensor.gobo_closest_aircraft_bearing") | int(180) -%}
        {%- set type = state_attr("sensor.gobo_closest_aircraft", "category_code") | default('xx')  -%}
        {%- set noteworthy = type.startswith('A') and distance < 3 and (bearing > -60 and bearing < 60 and alt < 10000) or (distance < 2) -%}
        {%- if noteworthy -%}{{ state_attr("sensor.gobo_closest_aircraft", "flight_number")  }}{%- else -%}None{%- endif -%}
    # TODO: 
    # track trend - turning towards or away?
    # operator (needs API)
    # Noise (estimated)
    # Noise (current)
  - unique_id: office
    sensor:
    - name: 'Busy Light Colour'
      unique_id: busy_light_colour
      state: >-
        {% if not is_state('binary_sensor.cow_macbookpro_in_meeting', 'on') %}
          free
        {% elif is_state('binary_sensor.cow_macbookpro_muted', 'off') %}
          red
        {% elif is_state('binary_sensor.cow_macbook_pro_camera_in_use', 'on') %}
          blue
        {% else %}
          green
        {% endif %}
  - unique_id: hnt_wallet_master
    sensor:
    - name: 'Helium Master Wallet Value'
      unique_id: hnt_wallet_master_value_usd
      state: "{{ (states('sensor.helium_hnt_oracle_price') |float(0) * states('sensor.helium_wallet_master') | float(0)) | round(2) }}"
      unit_of_measurement: "USD"
      icon: "mdi:wallet"
  - unique_id: location_friendly_sensors
    sensor:
    - name: 'Paul Friendly Location'
      unique_id: paul_friendly_location
      state: >-
        {% if is_state('person.paul', 'not_home') %}
          {{ states('sensor.pixel_6_pro_geocoded_location') }}
        {% else %}
          {{ states('person.paul') }}
        {% endif %}
  - binary_sensor:
    - name: 'cow-macbookpro Docked In Office'
      state: >-
        {{ states("sensor.cow_macbookpro_primary_display_name") == "B326Hk" }}
      # {{ state_attr('sensor.cows_macbook_pro_displays', 'Display IDs') | select('eq', '1552D80D-A68A-5100-D7A7-18F5F54AE116') | list | count > 0 }}
      delay_on: '0:00:10'
      delay_off: '0:00:10'
      device_class: 'connectivity'
    - name: 'Office Sonos Ungrouped'
      state: >-
        {{ state_attr('sensor.cows_macbook_pro_displays', 'Display IDs') | select('eq', '1552D80D-A68A-5100-D7A7-18F5F54AE116') | list | count > 0 }}
      delay_on: '0:00:10'
      delay_off: '0:00:10'
      device_class: 'connectivity'
    - name: 'Office Door Can Be Open'
      state: >-
        {{ states('climate.daikin_paul_office') == states('climate.daikin_kitchen') }}
      delay_on: '0:00:05'
      delay_off: '0:00:05'
      device_class: 'door'
    - name: 'Dot Office Door Can Be Open'
      state: >-
        {{ states('climate.daikin_dot_office') == states('climate.daikin_living_room') }}
      delay_on: '0:00:05'
      delay_off: '0:00:05'
      device_class: 'door'
    - name: 'Kitchen Door Can Be Open'
      state: >-
        {{ states('climate.daikin_kitchen') == states('climate.daikin_living_room') }}
      delay_on: '0:00:05'
      delay_off: '0:00:05'
      device_class: 'door'
    - name: 'Guest Room Door Can Be Open'
      state: >-
        {{ states('climate.daikin_guest_room') == states('climate.daikin_living_room') }}
      delay_on: '0:00:05'
      delay_off: '0:00:05'
      device_class: 'door'
    - name: 'Bedroom Door Can Be Open'
      state: >-
        {{ states('climate.daikin_bedroom') == states('climate.daikin_living_room') }}
      delay_on: '0:00:05'
      delay_off: '0:00:05'
      device_class: 'door'
    - name: 'Back Door Can Be Open'
      # TODO: remove living room once that door is monitored
      state: >-
        {{ states('climate.daikin_kitchen') == 'off' and states('climate.daikin_living_room') == 'off' }}
      delay_on: '0:00:05'
      delay_off: '0:00:05'
      device_class: 'door'
    - name: 'Attic Door Can Be Open'
      state: >-
        {{ states('climate.daikin_living_room') == 'off' }}
      delay_on: '0:00:05'
      delay_off: '0:00:05'
      device_class: 'door'
    - name: 'Office Door Left Open'
      state: >-
        {{ states('binary_sensor.office_door_can_be_open') == 'off' and states('binary_sensor.office_door') == 'on' }}
      delay_on: '0:00:05'
      delay_off: '0:00:05'
      device_class: 'problem'
    - name: 'Dot Office Door Left Open'
      state: >-
        {{ states('binary_sensor.dot_office_door_can_be_open') == 'off' and states('binary_sensor.dots_office_door') == 'on' }}
      delay_on: '0:00:05'
      delay_off: '0:00:05'
      device_class: 'problem'
    # TODO: - name: 'Kitchen Door Left Open'
    - name: 'Guest Room Door Left Open'
      state: >-
        {{ states('binary_sensor.guest_room_door_can_be_open') == 'off' and states('binary_sensor.guest_room_door') == 'on' }}
      delay_on: '0:00:05'
      delay_off: '0:00:05'
      device_class: 'problem'
    - name: 'Bedroom Door Left Open'
      state: >-
        {{ states('binary_sensor.bedroom_door_can_be_open') == 'off' and states('binary_sensor.bedroom_door') == 'on' }}
      delay_on: '0:00:05'
      delay_off: '0:00:05'
      device_class: 'problem'
    - name: 'Back Door Left Open'
      state: >-
        {{ states('binary_sensor.back_door_can_be_open') == 'off' and states('binary_sensor.back_door') == 'on' }}
      delay_on: '0:00:05'
      delay_off: '0:00:05'
      device_class: 'problem'
    - name: 'Attic Door Left Open'
      state: >-
        {{ states('binary_sensor.attic_door_can_be_open') == 'off' and states('binary_sensor.attic_door') == 'on' }}
      delay_on: '0:00:05'
      delay_off: '0:00:05'
      device_class: 'problem'

rest_command:
  toggle_cow_macbookpro_mutesync:
    url: !secret mutesync_token_cowmacbookpro
    method: post
    headers:
      Authorization: !secret mutesync_token_cowmacbookpro

switch:
  - platform: template
    switches:
      cow_macbookpro_mutesync_mute:
        friendly_name: "cow-macbookpro mutesync muted"
        unique_id: "switch_template_cow_macbookpro_mutesync_muted"
        value_template: '{{ is_state("binary_sensor.cow_macbookpro_muted", "on")}}'
        availability_template: '{{ is_state("binary_sensor.cow_macbookpro_in_meeting", "on")}}'
        turn_on:
          service: rest_command.toggle_cow_macbookpro_mutesync
        turn_off:
          service: rest_command.toggle_cow_macbookpro_mutesync
  - platform: wake_on_lan
    name: red
    host: !secret red_ip_address
    mac: !secret red_mac_address

shell_command:
  process_mpd_data: '/config/ha-scrobble/processmpd.sh {{ mpd_data }}'

cow_custom_filters:

rest:
  - resource: http://10.41.2.69/info/system
    scan_interval: 60
    headers:
      Cookie: mysession=MTY3NTA1ODkyOXxEdi1CQkFFQ180SUFBUkFCRUFBQVlfLUNBQUVHYzNSeWFXNW5EQTBBQzJOMWNuSmxiblJWYzJWeUNXMWhhVzR1VlhObGN2LURBd0VCQkZWelpYSUJfNFFBQVFRQkFrbGtBUVFBQVFoVmMyVnlibUZ0WlFFTUFBRUlVR0Z6YzNkdmNtUUJEQUFCQjBacGNuTjBTVzRCQWdBQUFCel9oQmtCX2s0aUFRVmhaRzFwYmdFTFRXOXZRMjkzWFRBeFd5RUF8cyTTTy8Ic4kD3pDziG4mPqXPvmChtmfwOLRNS8sfy1g=
    sensor:
      - name: "Linxdot CPU Temperature"
        value_template: "{{ value_json.cpu_temp | round(1) }}"
        unit_of_measurement: '°C'
        device_class: "temperature"
        state_class: "measurement"
      - name: "Linxdot CPU Load"
        value_template: "{{ value_json.cpu_usage | round(1) }}"
        state_class: "measurement"
        unit_of_measurement: '%'
  - resource: http://gobo:8082/data/aircraft.json
    scan_interval: 15
    sensor:
      - name: "FR24 Aircraft"
        value_template: "{{ value_json.messages }}"
        json_attributes:
        - now
        - aircraft


utility_meter:
  helium_wallet_today:
    source: sensor.helium_wallet_master
    cycle: daily

  helium_wallet_weekly:
    source: sensor.helium_wallet_master
    cycle: weekly

  helium_wallet_monthly:
    source: sensor.helium_wallet_master
    cycle: monthly

powercalc:


recorder:
  commit_interval: 30
  exclude:
    entity_globs:
      - sensor.closest_plane*
  purge_keep_days: 30

influxdb:
  api_version: 2
  ssl: false
  host: !secret influxdb_host
  port: 8086
  token: !secret influxdb_token
  organization: !secret influx_org
  bucket: homeassistant
  tags:
    source: HomeAssistant
  tags_attributes:
    - friendly_name
  default_measurement: units
  ignore_attributes:
    - icon
  #exclude:    # Customise to fit your needs
  #  entities:
  #    - zone.home
  #  domains:
  #    - persistent_notification
  #    - person

waste_collection_schedule:
  sources:
    - name: Home
      args:
        suburb: !secret rubbish_suburb
        street_name: !secret rubbish_street
        street_number: !secret rubbish_number

logbook:
  exclude:
    entities:
      - sensor.fr24_aircraft
